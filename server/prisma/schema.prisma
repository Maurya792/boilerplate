generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
  binaryTargets   = ["native"]
}

generator typegraphql {
  provider            = "typegraphql-prisma"
  output              = "./__generated__/graphql"
  formatGeneratedCode = "prettier"
  useSimpleInputs     = true
  simpleResolvers     = true
  previewFeatures     = ["views"]
  binaryTargets       = ["native"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // uses connection pooling
  directUrl = env("SHADOW_DATABASE_URL") // uses a direct connection
}

model user {
  id         Int            @id @default(autoincrement()) @db.Integer
  created_at DateTime       @default(now())
  updated_at DateTime       @updatedAt
  username   String         @unique(map: "user_username_unique")
  name       String?        @db.Text
  /// @TypeGraphQL.omit(output: true)
  password   String         @db.Text
  status     account_status @default(initiated)
}

enum user_role {
  admin
  user
  owner
}

enum account_status {
  active
  initiated
}
